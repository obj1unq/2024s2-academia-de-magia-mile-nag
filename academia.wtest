import academia.*
import muebles.*
import cosas.*
import marcas.*
describe "Academia de Magia" {

	// TODO: construir/obtener una cosa con volumen = 3, marca = cuchuflito, no es mágica ni una reliquia
	const pelota = new Cosa(volumen = 3, marca = cuchuflito, esMagico= false, esReliquia= false)
	// TODO: construir/obtener una cosa con volumen = 4, marca = acme, es mágica y una reliquia
	const escoba = new Cosa(volumen = 4, marca = acme, esMagico= true, esReliquia= true) 
	// TODO: construir/obtener una cosa con volumen = 1, marca = fenix, es mágica pero no es una reliquia
	const varita = new Cosa(volumen = 1, marca = fenix, esMagico= true, esReliquia= false)
	// TODO: construir/obtener una cosa con volumen = 2, marca = acme, no es magica pero sí una reliquia
	const pava = new Cosa(volumen = 2, marca = acme, esMagico= false, esReliquia= true)
	// TODO: construir/obtener una cosa con volumen = 3, marca = fenix, es mágica y una reliquia
	const lamparaAladino = new Cosa(volumen = 3, marca = fenix, esMagico= true, esReliquia= true)
	// TODO: construir/obtener un baúl con volumen máximo = 5 y la escoba dentro
	const baul = new Baul (volMax = 5, cosasGuardadas = #{escoba})
	// TODO: construir/obtener un gabinete mágico con la varita dentro. El precio = 6 (segunda parte)
	const gabineteMagico = new Gabinete (cosasGuardadas = #{varita}, precio = 6)
	// TODO: construir/obtener un armario con cantidad máxima = 2 y la pelota dentro
	var armario = new Armario (cantMax = 2, cosasGuardadas = #{pelota})
	// TODO: construir/obtener una academia que tiene el baúl, el gabinete mágico y el armario
	const academia = new Academia (muebles = #{baul, gabineteMagico, armario})


	test "punto 1.1 saber si está guardado algo" {
		// TODO: Verificar que la varita está guardada en la academia
		assert.that(academia.estaGuardada(varita))
		// TODO: Verificar que la pelota está guardada en la academia
		assert.that(academia.estaGuardada(pelota))
		// TODO: Verificar que la escoba está guardada en la academia
		assert.that(academia.estaGuardada(escoba))
		// TODO: Verificar que la pava NO está guardada en la academia
		assert.notThat(academia.estaGuardada(pava))
		// TODO: Verificar que la lámpara NO está guardada en la academia
		assert.notThat(academia.estaGuardada(lamparaAladino))
	}

	test "punto 1.2, saber en que mueble esta guardado algo" {
		// TODO: Verificar que el mueble donde se guarda la varita está es el gabinete mágico
		assert.equals(#{varita}, gabineteMagico.cosasGuardadas())
		// TODO: Verificar que el mueble donde se guarda la pelota está guardada es el armario
		assert.equals(#{pelota}, armario.cosasGuardadas())
		// TODO: Verificar que el mueble donde se guarda la escoba está guardada es el baúl
		assert.equals(#{escoba}, baul.cosasGuardadas())
	}

	test "punto 1.3, saber si se puede guardar algo" {
		// TODO: Verificar que la varita NO se puede guardar en la academia
		assert.notThat(academia.sePuedeGuardar(varita))
		// TODO: Verificar que la pelota NO se puede guardar en la academia
		assert.notThat(academia.sePuedeGuardar(pelota))
		// TODO: Verificar que la escoba NO se puede guardar en la academia
		assert.notThat(academia.sePuedeGuardar(escoba))
		// TODO: Verificar que la pava se puede guardar en la academia
		assert.that(academia.sePuedeGuardar(pava))
		// TODO: Verificar que la lámpara se puede guardar en la academia
		assert.that(academia.sePuedeGuardar(lamparaAladino))
		// TODO: Cambiar la capacidad del armario a 1
		armario.cantMax(1)
		// TODO: Verificar que ahora la pava NO se puede guardar en la academia
		assert.notThat(academia.sePuedeGuardar(pava))
	}

	test "punto 1.4 saber en que muebles se puede guardar algo" {
		// TODO: Verificar que al preguntar en que muebles se puede guardar la pava se obtiene el armario
		assert.equals(#{armario}, academia.enQueMuebleSePuedeGuardar(pava))
		// TODO: Verificar al preguntar en que muebles se puede guardar la lámpara se obtienen el armario y el gabinete mágico
		assert.equals(#{gabineteMagico}, academia.enQueMuebleSePuedeGuardar(lamparaAladino))
	}

	test "punto 1.5. guardar una cosa" {
		// TODO: Guardar la pava en la academia
		academia.guardar(pava)
		// TODO: Verificar que la pava está guardada en la academia
		assert.that(academia.estaGuardada(pava))
		// TODO: Guardar la lámpara en la academia
		academia.guardar(lamparaAladino)
		// TODO: Verificar que la lámpara está guardada en la academia
		assert.that(academia.estaGuardada(pava))
		// TODO: Guardar la escoba en la academia (NO SE PUEDE!)
		assert.throwsException({ academia.guardar(escoba) })
		// TODO: Guardar la pelota en la academia (NO SE PUEDE!)
		assert.throwsException({ academia.guardar(pelota) })
		// TODO: Guardar la varita en la academia (NO SE PUEDE!)
		assert.throwsException({ academia.guardar(varita) })
	}

	test "punto 1.5 no poder guardar una cosa por culpa de que no hay mueble" {
		// TODO: Cambiar la capacidad del armario a 1
		armario.cantMax(1)
		// TODO: Guardar la pava en la academia (NO SE PUEDE!)
		assert.throwsException({ academia.guardar(pava) })
		// TODO: Verificar que la pava NO está guardada en la academia
		assert.notThat(academia.estaGuardada(pava))
	}

	test "punto 2.1 utilidad" {
		// TODO: Guardar la pava en el armario
		armario.agregarCosa(pava)
		// TODO: Guardar la lámpara en el gabinete mágico
		gabineteMagico.agregarCosa(lamparaAladino)
		// TODO: construir/obtener un baúl mágico con volumen máximo = 12 y con la escoba y la lámpara dentro
		var baulMagico = new BaulMagico (volMax = 12, cosasGuardadas =#{escoba, lamparaAladino}) 
		// TODO: Verificar que la utilidad del armario es 1.1
		assert.equals(1.1, armario.utilidad())
		// TODO: Verificar que la utilidad del ganibete mágico es 3
		assert.equals(3, gabineteMagico.utilidad())
		// TODO: Verificar que la utilidad del baúl es 4
		assert.equals(4, baul.utilidad())
		// TODO: Verificar que la utilidad del baúl mágico es 5
		assert.equals(5, baulMagico.utilidad())
	}

	test "punto 2.2 cosas menos utiles" {
		// TODO: Guardar la pava en el armario
		armario.agregarCosa(pava)
		// TODO: Guardar la lámpara en el gabinete mágico
		gabineteMagico.agregarCosa(lamparaAladino)
		// TODO: Verificar que las cosas menos útiles en la academia son la pelota, la varita y la escoba
		assert.equals(#{pelota, varita, escoba}, academia.cosasMenosUtiles())	
	}

	test "punto 2.3 marca de cosa menos util" {
		// TODO: Guardar la pava en el armario
		// TODO: Guardar la lámpara en el gabinete mágico
		// TODO: Verificar que la marca menos útil de la academia es cuchuflito
	}

/*
 * 	test "punto 2.4 remover cosas menos utiles que no son magicas" {
 * 		// TODO: Guardar la pava en el armario
 * 		// TODO: Guardar la lámpara en el gabinete mágico
 * 		// TODO: Remover las cosas menos útiles de la academia que no son mágicas
 * 		// TODO: Verificar que la varita está guardada en la academia
 * 		// TODO: Verificar que la pelota NO está guardada en la academia
 * 		// TODO: Verificar que la escoba está guardada en la academia
 * 		// TODO: Verificar que la pava está guardada en la academia
 * 		// TODO: Verificar que la lámpara está guardada en la academia
 * 	}
 */
/*
 * 	test "punto 2.4 imposible remover cosas menos utiles que no son magicas" {
 * 		// TODO: Hacer que la academia tenga solamente el armario y el baúl
 * 		// TODO: Remover las cosas menos útiles de la academia que no son mágicas (NO SE PUEDE!)
 * 	}
 */
}

